/*
* generated by Xtext
*/
grammar InternalPBS;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.lowcoupling.mdpm.lng.pbs.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.lowcoupling.mdpm.lng.pbs.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.lowcoupling.mdpm.lng.pbs.services.PBSGrammarAccess;

}

@parser::members {
 
 	private PBSGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PBSGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePBS
entryRulePBS 
:
{ before(grammarAccess.getPBSRule()); }
	 rulePBS
{ after(grammarAccess.getPBSRule()); } 
	 EOF 
;

// Rule PBS
rulePBS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPBSAccess().getProductParserRuleCall()); }
	ruleProduct
{ after(grammarAccess.getPBSAccess().getProductParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProduct
entryRuleProduct 
:
{ before(grammarAccess.getProductRule()); }
	 ruleProduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule Product
ruleProduct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProductAccess().getGroup()); }
(rule__Product__Group__0)
{ after(grammarAccess.getProductAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePart
entryRulePart 
:
{ before(grammarAccess.getPartRule()); }
	 rulePart
{ after(grammarAccess.getPartRule()); } 
	 EOF 
;

// Rule Part
rulePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartAccess().getGroup()); }
(rule__Part__Group__0)
{ after(grammarAccess.getPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Part__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getGroup_3_0()); }
(rule__Part__Group_3_0__0)
{ after(grammarAccess.getPartAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getPartAccess().getENDLINETerminalRuleCall_3_1()); }
	RULE_ENDLINE
{ after(grammarAccess.getPartAccess().getENDLINETerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Product__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__0__Impl
	rule__Product__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getDescriptionAssignment_0()); }
(rule__Product__DescriptionAssignment_0)?
{ after(grammarAccess.getProductAccess().getDescriptionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__1__Impl
	rule__Product__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getProductKeyword_1()); }

	'Product ' 

{ after(grammarAccess.getProductAccess().getProductKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__2__Impl
	rule__Product__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getNameAssignment_2()); }
(rule__Product__NameAssignment_2)
{ after(grammarAccess.getProductAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__3__Impl
	rule__Product__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getOPENCURLYTerminalRuleCall_3()); }
	RULE_OPENCURLY
{ after(grammarAccess.getProductAccess().getOPENCURLYTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__4__Impl
	rule__Product__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getPartsAssignment_4()); }
(rule__Product__PartsAssignment_4)*
{ after(grammarAccess.getProductAccess().getPartsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getCLOSEDCURLYTerminalRuleCall_5()); }
	RULE_CLOSEDCURLY
{ after(grammarAccess.getProductAccess().getCLOSEDCURLYTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__0__Impl
	rule__Part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getDescriptionAssignment_0()); }
(rule__Part__DescriptionAssignment_0)?
{ after(grammarAccess.getPartAccess().getDescriptionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__1__Impl
	rule__Part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getPartKeyword_1()); }

	'Part ' 

{ after(grammarAccess.getPartAccess().getPartKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__2__Impl
	rule__Part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getNameAssignment_2()); }
(rule__Part__NameAssignment_2)
{ after(grammarAccess.getPartAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getAlternatives_3()); }
(rule__Part__Alternatives_3)
{ after(grammarAccess.getPartAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Part__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group_3_0__0__Impl
	rule__Part__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getOPENCURLYTerminalRuleCall_3_0_0()); }
	RULE_OPENCURLY
{ after(grammarAccess.getPartAccess().getOPENCURLYTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group_3_0__1__Impl
	rule__Part__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getPartsAssignment_3_0_1()); }
(rule__Part__PartsAssignment_3_0_1)*
{ after(grammarAccess.getPartAccess().getPartsAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Part__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getCLOSEDCURLYTerminalRuleCall_3_0_2()); }
	RULE_CLOSEDCURLY
{ after(grammarAccess.getPartAccess().getCLOSEDCURLYTerminalRuleCall_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Product__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getDescriptionML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getProductAccess().getDescriptionML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getProductAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__PartsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getPartsPartParserRuleCall_4_0()); }
	rulePart{ after(grammarAccess.getProductAccess().getPartsPartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Part__DescriptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getDescriptionML_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_COMMENT{ after(grammarAccess.getPartAccess().getDescriptionML_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Part__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPartAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Part__PartsAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartAccess().getPartsPartParserRuleCall_3_0_1_0()); }
	rulePart{ after(grammarAccess.getPartAccess().getPartsPartParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ENDLINE : ';';

RULE_OPENCURLY : '{';

RULE_CLOSEDCURLY : '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


