/*
* generated by Xtext
*/
package com.lowcoupling.mdpm.lng.plan.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PlanGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Program");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cDescriptionAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cDescriptionML_COMMENTTerminalRuleCall_0_0_0 = (RuleCall)cDescriptionAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cProgramKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_1_0 = (RuleCall)cNameAssignment_0_1_1.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_0_1_2 = (RuleCall)cGroup_0_1.eContents().get(2);
		private final Group cGroup_0_1_3 = (Group)cGroup_0_1.eContents().get(3);
		private final Assignment cPlansAssignment_0_1_3_0 = (Assignment)cGroup_0_1_3.eContents().get(0);
		private final RuleCall cPlansPlanImportParserRuleCall_0_1_3_0_0 = (RuleCall)cPlansAssignment_0_1_3_0.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_0_1_3_1 = (RuleCall)cGroup_0_1_3.eContents().get(1);
		private final Group cGroup_0_1_4 = (Group)cGroup_0_1.eContents().get(4);
		private final Keyword cProjectKeyword_0_1_4_0 = (Keyword)cGroup_0_1_4.eContents().get(0);
		private final Assignment cReferencedProjectsAssignment_0_1_4_1 = (Assignment)cGroup_0_1_4.eContents().get(1);
		private final CrossReference cReferencedProjectsProjectCrossReference_0_1_4_1_0 = (CrossReference)cReferencedProjectsAssignment_0_1_4_1.eContents().get(0);
		private final RuleCall cReferencedProjectsProjectQualifiedNameParserRuleCall_0_1_4_1_0_1 = (RuleCall)cReferencedProjectsProjectCrossReference_0_1_4_1_0.eContents().get(1);
		private final RuleCall cENDLINEParserRuleCall_0_1_4_2 = (RuleCall)cGroup_0_1_4.eContents().get(2);
		private final Assignment cProjectsAssignment_0_1_5 = (Assignment)cGroup_0_1.eContents().get(5);
		private final RuleCall cProjectsProjectParserRuleCall_0_1_5_0 = (RuleCall)cProjectsAssignment_0_1_5.eContents().get(0);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_0_1_6 = (RuleCall)cGroup_0_1.eContents().get(6);
		private final Assignment cProjectsAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cProjectsProjectParserRuleCall_1_0 = (RuleCall)cProjectsAssignment_1.eContents().get(0);
		
		//Program:
		//
		//	description=ML_COMMENT? ("Program" name=ID OPENCURLY (plans+=PlanImport ENDLINE)* ("project"
		//
		//	referencedProjects+=[Project|QualifiedName] ENDLINE)* projects+=Project* CLOSEDCURLY) | projects+=Project;
		public ParserRule getRule() { return rule; }

		//description=ML_COMMENT? ("Program" name=ID OPENCURLY (plans+=PlanImport ENDLINE)* ("project"
		//
		//referencedProjects+=[Project|QualifiedName] ENDLINE)* projects+=Project* CLOSEDCURLY) | projects+=Project
		public Alternatives getAlternatives() { return cAlternatives; }

		//description=ML_COMMENT? ("Program" name=ID OPENCURLY (plans+=PlanImport ENDLINE)* ("project"
		//
		//referencedProjects+=[Project|QualifiedName] ENDLINE)* projects+=Project* CLOSEDCURLY)
		public Group getGroup_0() { return cGroup_0; }

		//description=ML_COMMENT?
		public Assignment getDescriptionAssignment_0_0() { return cDescriptionAssignment_0_0; }

		//ML_COMMENT
		public RuleCall getDescriptionML_COMMENTTerminalRuleCall_0_0_0() { return cDescriptionML_COMMENTTerminalRuleCall_0_0_0; }

		//"Program" name=ID OPENCURLY (plans+=PlanImport ENDLINE)* ("project" referencedProjects+=[Project|QualifiedName]
		//
		//ENDLINE)* projects+=Project* CLOSEDCURLY
		public Group getGroup_0_1() { return cGroup_0_1; }

		//"Program"
		public Keyword getProgramKeyword_0_1_0() { return cProgramKeyword_0_1_0; }

		//name=ID
		public Assignment getNameAssignment_0_1_1() { return cNameAssignment_0_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_1_0() { return cNameIDTerminalRuleCall_0_1_1_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_0_1_2() { return cOPENCURLYTerminalRuleCall_0_1_2; }

		//(plans+=PlanImport ENDLINE)*
		public Group getGroup_0_1_3() { return cGroup_0_1_3; }

		//plans+=PlanImport
		public Assignment getPlansAssignment_0_1_3_0() { return cPlansAssignment_0_1_3_0; }

		//PlanImport
		public RuleCall getPlansPlanImportParserRuleCall_0_1_3_0_0() { return cPlansPlanImportParserRuleCall_0_1_3_0_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_0_1_3_1() { return cENDLINEParserRuleCall_0_1_3_1; }

		//("project" referencedProjects+=[Project|QualifiedName] ENDLINE)*
		public Group getGroup_0_1_4() { return cGroup_0_1_4; }

		//"project"
		public Keyword getProjectKeyword_0_1_4_0() { return cProjectKeyword_0_1_4_0; }

		//referencedProjects+=[Project|QualifiedName]
		public Assignment getReferencedProjectsAssignment_0_1_4_1() { return cReferencedProjectsAssignment_0_1_4_1; }

		//[Project|QualifiedName]
		public CrossReference getReferencedProjectsProjectCrossReference_0_1_4_1_0() { return cReferencedProjectsProjectCrossReference_0_1_4_1_0; }

		//QualifiedName
		public RuleCall getReferencedProjectsProjectQualifiedNameParserRuleCall_0_1_4_1_0_1() { return cReferencedProjectsProjectQualifiedNameParserRuleCall_0_1_4_1_0_1; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_0_1_4_2() { return cENDLINEParserRuleCall_0_1_4_2; }

		//projects+=Project*
		public Assignment getProjectsAssignment_0_1_5() { return cProjectsAssignment_0_1_5; }

		//Project
		public RuleCall getProjectsProjectParserRuleCall_0_1_5_0() { return cProjectsProjectParserRuleCall_0_1_5_0; }

		//CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_0_1_6() { return cCLOSEDCURLYTerminalRuleCall_0_1_6; }

		//projects+=Project
		public Assignment getProjectsAssignment_1() { return cProjectsAssignment_1; }

		//Project
		public RuleCall getProjectsProjectParserRuleCall_1_0() { return cProjectsProjectParserRuleCall_1_0; }
	}

	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionML_COMMENTTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cProjectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cWbsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cWbsWBSImportParserRuleCall_4_0_0 = (RuleCall)cWbsAssignment_4_0.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cResourcesAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cResourcesResourcesImportParserRuleCall_5_0_0 = (RuleCall)cResourcesAssignment_5_0.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cPlansAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cPlansPlanImportParserRuleCall_6_0_0 = (RuleCall)cPlansAssignment_6_0.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAssumptionsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Assignment cAssumptionsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAssumptionsAssumptionParserRuleCall_7_2_0 = (RuleCall)cAssumptionsAssignment_7_2.eContents().get(0);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_7_3 = (RuleCall)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cConstraintsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Assignment cConstraintsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cConstraintsConstraintParserRuleCall_8_2_0 = (RuleCall)cConstraintsAssignment_8_2.eContents().get(0);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_8_3 = (RuleCall)cGroup_8.eContents().get(3);
		private final Assignment cActivitiesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cActivitiesActivityElementParserRuleCall_9_0 = (RuleCall)cActivitiesAssignment_9.eContents().get(0);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		
		//Project:
		//
		//	description=ML_COMMENT? "Project" name=ID OPENCURLY (wbs=WBSImport ENDLINE)? (resources=ResourcesImport ENDLINE)?
		//
		//	(plans+=PlanImport ENDLINE)* ("assumptions" OPENCURLY assumptions+=Assumption* CLOSEDCURLY)? ("constraints" OPENCURLY
		//
		//	constraints+=Constraint* CLOSEDCURLY)? activities+=ActivityElement* CLOSEDCURLY;
		public ParserRule getRule() { return rule; }

		//description=ML_COMMENT? "Project" name=ID OPENCURLY (wbs=WBSImport ENDLINE)? (resources=ResourcesImport ENDLINE)?
		//
		//(plans+=PlanImport ENDLINE)* ("assumptions" OPENCURLY assumptions+=Assumption* CLOSEDCURLY)? ("constraints" OPENCURLY
		//
		//constraints+=Constraint* CLOSEDCURLY)? activities+=ActivityElement* CLOSEDCURLY
		public Group getGroup() { return cGroup; }

		//description=ML_COMMENT?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//ML_COMMENT
		public RuleCall getDescriptionML_COMMENTTerminalRuleCall_0_0() { return cDescriptionML_COMMENTTerminalRuleCall_0_0; }

		//"Project"
		public Keyword getProjectKeyword_1() { return cProjectKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_3() { return cOPENCURLYTerminalRuleCall_3; }

		//(wbs=WBSImport ENDLINE)?
		public Group getGroup_4() { return cGroup_4; }

		//wbs=WBSImport
		public Assignment getWbsAssignment_4_0() { return cWbsAssignment_4_0; }

		//WBSImport
		public RuleCall getWbsWBSImportParserRuleCall_4_0_0() { return cWbsWBSImportParserRuleCall_4_0_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_4_1() { return cENDLINEParserRuleCall_4_1; }

		//(resources=ResourcesImport ENDLINE)?
		public Group getGroup_5() { return cGroup_5; }

		//resources=ResourcesImport
		public Assignment getResourcesAssignment_5_0() { return cResourcesAssignment_5_0; }

		//ResourcesImport
		public RuleCall getResourcesResourcesImportParserRuleCall_5_0_0() { return cResourcesResourcesImportParserRuleCall_5_0_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_5_1() { return cENDLINEParserRuleCall_5_1; }

		//(plans+=PlanImport ENDLINE)*
		public Group getGroup_6() { return cGroup_6; }

		//plans+=PlanImport
		public Assignment getPlansAssignment_6_0() { return cPlansAssignment_6_0; }

		//PlanImport
		public RuleCall getPlansPlanImportParserRuleCall_6_0_0() { return cPlansPlanImportParserRuleCall_6_0_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_6_1() { return cENDLINEParserRuleCall_6_1; }

		//("assumptions" OPENCURLY assumptions+=Assumption* CLOSEDCURLY)?
		public Group getGroup_7() { return cGroup_7; }

		//"assumptions"
		public Keyword getAssumptionsKeyword_7_0() { return cAssumptionsKeyword_7_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_7_1() { return cOPENCURLYTerminalRuleCall_7_1; }

		//assumptions+=Assumption*
		public Assignment getAssumptionsAssignment_7_2() { return cAssumptionsAssignment_7_2; }

		//Assumption
		public RuleCall getAssumptionsAssumptionParserRuleCall_7_2_0() { return cAssumptionsAssumptionParserRuleCall_7_2_0; }

		//CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_7_3() { return cCLOSEDCURLYTerminalRuleCall_7_3; }

		//("constraints" OPENCURLY constraints+=Constraint* CLOSEDCURLY)?
		public Group getGroup_8() { return cGroup_8; }

		//"constraints"
		public Keyword getConstraintsKeyword_8_0() { return cConstraintsKeyword_8_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_8_1() { return cOPENCURLYTerminalRuleCall_8_1; }

		//constraints+=Constraint*
		public Assignment getConstraintsAssignment_8_2() { return cConstraintsAssignment_8_2; }

		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_8_2_0() { return cConstraintsConstraintParserRuleCall_8_2_0; }

		//CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_8_3() { return cCLOSEDCURLYTerminalRuleCall_8_3; }

		//activities+=ActivityElement*
		public Assignment getActivitiesAssignment_9() { return cActivitiesAssignment_9; }

		//ActivityElement
		public RuleCall getActivitiesActivityElementParserRuleCall_9_0() { return cActivitiesActivityElementParserRuleCall_9_0; }

		//CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_10() { return cCLOSEDCURLYTerminalRuleCall_10; }
	}

	public class AssumptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Assumption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Assumption:
		//
		//	"-" value=STRING ENDLINE;
		public ParserRule getRule() { return rule; }

		//"-" value=STRING ENDLINE
		public Group getGroup() { return cGroup; }

		//"-"
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_2() { return cENDLINEParserRuleCall_2; }
	}

	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Constraint:
		//
		//	"-" value=STRING ENDLINE;
		public ParserRule getRule() { return rule; }

		//"-" value=STRING ENDLINE
		public Group getGroup() { return cGroup; }

		//"-"
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_2() { return cENDLINEParserRuleCall_2; }
	}

	public class ActivityGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionML_COMMENTTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cGroupKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDependsOnKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDependenciesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDependenciesActivityElementCrossReference_4_1_0 = (CrossReference)cDependenciesAssignment_4_1.eContents().get(0);
		private final RuleCall cDependenciesActivityElementQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cDependenciesActivityElementCrossReference_4_1_0.eContents().get(1);
		private final RuleCall cENDLINEParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Assignment cActivitiesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cActivitiesActivityElementParserRuleCall_5_0 = (RuleCall)cActivitiesAssignment_5.eContents().get(0);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//ActivityGroup:
		//
		//	description=ML_COMMENT? "Group" name=ID OPENCURLY ("dependsOn" dependencies+=[ActivityElement|QualifiedName]*
		//
		//	ENDLINE)? activities+=ActivityElement* //groups += ActivityGroup*
		// CLOSEDCURLY;
		public ParserRule getRule() { return rule; }

		//description=ML_COMMENT? "Group" name=ID OPENCURLY ("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?
		//
		//activities+=ActivityElement* //groups += ActivityGroup*
		// CLOSEDCURLY
		public Group getGroup() { return cGroup; }

		//description=ML_COMMENT?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//ML_COMMENT
		public RuleCall getDescriptionML_COMMENTTerminalRuleCall_0_0() { return cDescriptionML_COMMENTTerminalRuleCall_0_0; }

		//"Group"
		public Keyword getGroupKeyword_1() { return cGroupKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_3() { return cOPENCURLYTerminalRuleCall_3; }

		//("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?
		public Group getGroup_4() { return cGroup_4; }

		//"dependsOn"
		public Keyword getDependsOnKeyword_4_0() { return cDependsOnKeyword_4_0; }

		//dependencies+=[ActivityElement|QualifiedName]*
		public Assignment getDependenciesAssignment_4_1() { return cDependenciesAssignment_4_1; }

		//[ActivityElement|QualifiedName]
		public CrossReference getDependenciesActivityElementCrossReference_4_1_0() { return cDependenciesActivityElementCrossReference_4_1_0; }

		//QualifiedName
		public RuleCall getDependenciesActivityElementQualifiedNameParserRuleCall_4_1_0_1() { return cDependenciesActivityElementQualifiedNameParserRuleCall_4_1_0_1; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_4_2() { return cENDLINEParserRuleCall_4_2; }

		//activities+=ActivityElement*
		public Assignment getActivitiesAssignment_5() { return cActivitiesAssignment_5; }

		//ActivityElement
		public RuleCall getActivitiesActivityElementParserRuleCall_5_0() { return cActivitiesActivityElementParserRuleCall_5_0; }

		////groups += ActivityGroup*
		// CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_6() { return cCLOSEDCURLYTerminalRuleCall_6; }
	}

	public class WBSImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WBSImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWbsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//WBSImport:
		//
		//	"wbs" importURI= // feature must be named importURI
		// STRING;
		public ParserRule getRule() { return rule; }

		//"wbs" importURI= // feature must be named importURI
		// STRING
		public Group getGroup() { return cGroup; }

		//"wbs"
		public Keyword getWbsKeyword_0() { return cWbsKeyword_0; }

		//importURI= // feature must be named importURI
		// STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//// feature must be named importURI
		// STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
	}

	public class ResourcesImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourcesImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourcesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//ResourcesImport:
		//
		//	"resources" importURI= // feature must be named importURI
		// STRING;
		public ParserRule getRule() { return rule; }

		//"resources" importURI= // feature must be named importURI
		// STRING
		public Group getGroup() { return cGroup; }

		//"resources"
		public Keyword getResourcesKeyword_0() { return cResourcesKeyword_0; }

		//importURI= // feature must be named importURI
		// STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//// feature must be named importURI
		// STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
	}

	public class PlanImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PlanImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//PlanImport:
		//
		//	"plan" importURI= // feature must be named importURI
		// STRING;
		public ParserRule getRule() { return rule; }

		//"plan" importURI= // feature must be named importURI
		// STRING
		public Group getGroup() { return cGroup; }

		//"plan"
		public Keyword getPlanKeyword_0() { return cPlanKeyword_0; }

		//importURI= // feature must be named importURI
		// STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//// feature must be named importURI
		// STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QualifiedNameWithWildCardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildCard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildCard:
		//
		//	QualifiedName ".*"?;
		public ParserRule getRule() { return rule; }

		//QualifiedName ".*"?
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//".*"?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}

	public class ActivityElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActivityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCheckPointParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cActivityGroupParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ActivityElement:
		//
		//	Activity | CheckPoint | ActivityGroup;
		public ParserRule getRule() { return rule; }

		//Activity | CheckPoint | ActivityGroup
		public Alternatives getAlternatives() { return cAlternatives; }

		//Activity
		public RuleCall getActivityParserRuleCall_0() { return cActivityParserRuleCall_0; }

		//CheckPoint
		public RuleCall getCheckPointParserRuleCall_1() { return cCheckPointParserRuleCall_1; }

		//ActivityGroup
		public RuleCall getActivityGroupParserRuleCall_2() { return cActivityGroupParserRuleCall_2; }
	}

	public class ENDLINEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ENDLINE");
		private final Keyword cSemicolonKeyword = (Keyword)rule.eContents().get(1);
		
		//ENDLINE:
		//
		//	";";
		public ParserRule getRule() { return rule; }

		//";"
		public Keyword getSemicolonKeyword() { return cSemicolonKeyword; }
	}

	public class CheckPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CheckPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionML_COMMENTTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cCheckPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cUnorderedGroup_4.eContents().get(0);
		private final Group cGroup_4_0_0 = (Group)cAlternatives_4_0.eContents().get(0);
		private final Keyword cDateKeyword_4_0_0_0 = (Keyword)cGroup_4_0_0.eContents().get(0);
		private final Assignment cEndAssignment_4_0_0_1 = (Assignment)cGroup_4_0_0.eContents().get(1);
		private final RuleCall cEndSTRINGTerminalRuleCall_4_0_0_1_0 = (RuleCall)cEndAssignment_4_0_0_1.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_4_0_0_2 = (RuleCall)cGroup_4_0_0.eContents().get(2);
		private final Group cGroup_4_0_1 = (Group)cAlternatives_4_0.eContents().get(1);
		private final Keyword cAfterKeyword_4_0_1_0 = (Keyword)cGroup_4_0_1.eContents().get(0);
		private final Assignment cAfterAssignment_4_0_1_1 = (Assignment)cGroup_4_0_1.eContents().get(1);
		private final CrossReference cAfterActivityElementCrossReference_4_0_1_1_0 = (CrossReference)cAfterAssignment_4_0_1_1.eContents().get(0);
		private final RuleCall cAfterActivityElementQualifiedNameParserRuleCall_4_0_1_1_0_1 = (RuleCall)cAfterActivityElementCrossReference_4_0_1_1_0.eContents().get(1);
		private final Keyword cOffsetKeyword_4_0_1_2 = (Keyword)cGroup_4_0_1.eContents().get(2);
		private final Assignment cOffsetAssignment_4_0_1_3 = (Assignment)cGroup_4_0_1.eContents().get(3);
		private final RuleCall cOffsetINTTerminalRuleCall_4_0_1_3_0 = (RuleCall)cOffsetAssignment_4_0_1_3.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_4_0_1_4 = (RuleCall)cGroup_4_0_1.eContents().get(4);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cCompletenessKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cCompletenessAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cCompletenessINTTerminalRuleCall_4_1_1_0 = (RuleCall)cCompletenessAssignment_4_1_1.eContents().get(0);
		private final Keyword cPercentSignKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cENDLINEParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cDependsOnKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cDependenciesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cDependenciesActivityElementCrossReference_4_2_1_0 = (CrossReference)cDependenciesAssignment_4_2_1.eContents().get(0);
		private final RuleCall cDependenciesActivityElementQualifiedNameParserRuleCall_4_2_1_0_1 = (RuleCall)cDependenciesActivityElementCrossReference_4_2_1_0.eContents().get(1);
		private final RuleCall cENDLINEParserRuleCall_4_2_2 = (RuleCall)cGroup_4_2.eContents().get(2);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//CheckPoint:
		//
		//	description=ML_COMMENT? "CheckPoint" name=ID OPENCURLY (("date" end=STRING ENDLINE | "after"
		//
		//	after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE) & "completeness" completeness=INT "%" ENDLINE &
		//
		//	("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?) CLOSEDCURLY;
		public ParserRule getRule() { return rule; }

		//description=ML_COMMENT? "CheckPoint" name=ID OPENCURLY (("date" end=STRING ENDLINE | "after"
		//
		//after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE) & "completeness" completeness=INT "%" ENDLINE &
		//
		//("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?) CLOSEDCURLY
		public Group getGroup() { return cGroup; }

		//description=ML_COMMENT?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//ML_COMMENT
		public RuleCall getDescriptionML_COMMENTTerminalRuleCall_0_0() { return cDescriptionML_COMMENTTerminalRuleCall_0_0; }

		//"CheckPoint"
		public Keyword getCheckPointKeyword_1() { return cCheckPointKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_3() { return cOPENCURLYTerminalRuleCall_3; }

		//("date" end=STRING ENDLINE | "after" after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE) & "completeness"
		//
		//completeness=INT "%" ENDLINE & ("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//"date" end=STRING ENDLINE | "after" after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }

		//"date" end=STRING ENDLINE
		public Group getGroup_4_0_0() { return cGroup_4_0_0; }

		//"date"
		public Keyword getDateKeyword_4_0_0_0() { return cDateKeyword_4_0_0_0; }

		//end=STRING
		public Assignment getEndAssignment_4_0_0_1() { return cEndAssignment_4_0_0_1; }

		//STRING
		public RuleCall getEndSTRINGTerminalRuleCall_4_0_0_1_0() { return cEndSTRINGTerminalRuleCall_4_0_0_1_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_4_0_0_2() { return cENDLINEParserRuleCall_4_0_0_2; }

		//"after" after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE
		public Group getGroup_4_0_1() { return cGroup_4_0_1; }

		//"after"
		public Keyword getAfterKeyword_4_0_1_0() { return cAfterKeyword_4_0_1_0; }

		//after=[ActivityElement|QualifiedName]
		public Assignment getAfterAssignment_4_0_1_1() { return cAfterAssignment_4_0_1_1; }

		//[ActivityElement|QualifiedName]
		public CrossReference getAfterActivityElementCrossReference_4_0_1_1_0() { return cAfterActivityElementCrossReference_4_0_1_1_0; }

		//QualifiedName
		public RuleCall getAfterActivityElementQualifiedNameParserRuleCall_4_0_1_1_0_1() { return cAfterActivityElementQualifiedNameParserRuleCall_4_0_1_1_0_1; }

		//"offset"
		public Keyword getOffsetKeyword_4_0_1_2() { return cOffsetKeyword_4_0_1_2; }

		//offset=INT
		public Assignment getOffsetAssignment_4_0_1_3() { return cOffsetAssignment_4_0_1_3; }

		//INT
		public RuleCall getOffsetINTTerminalRuleCall_4_0_1_3_0() { return cOffsetINTTerminalRuleCall_4_0_1_3_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_4_0_1_4() { return cENDLINEParserRuleCall_4_0_1_4; }

		//"completeness" completeness=INT "%" ENDLINE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"completeness"
		public Keyword getCompletenessKeyword_4_1_0() { return cCompletenessKeyword_4_1_0; }

		//completeness=INT
		public Assignment getCompletenessAssignment_4_1_1() { return cCompletenessAssignment_4_1_1; }

		//INT
		public RuleCall getCompletenessINTTerminalRuleCall_4_1_1_0() { return cCompletenessINTTerminalRuleCall_4_1_1_0; }

		//"%"
		public Keyword getPercentSignKeyword_4_1_2() { return cPercentSignKeyword_4_1_2; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_4_1_3() { return cENDLINEParserRuleCall_4_1_3; }

		//("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"dependsOn"
		public Keyword getDependsOnKeyword_4_2_0() { return cDependsOnKeyword_4_2_0; }

		//dependencies+=[ActivityElement|QualifiedName]*
		public Assignment getDependenciesAssignment_4_2_1() { return cDependenciesAssignment_4_2_1; }

		//[ActivityElement|QualifiedName]
		public CrossReference getDependenciesActivityElementCrossReference_4_2_1_0() { return cDependenciesActivityElementCrossReference_4_2_1_0; }

		//QualifiedName
		public RuleCall getDependenciesActivityElementQualifiedNameParserRuleCall_4_2_1_0_1() { return cDependenciesActivityElementQualifiedNameParserRuleCall_4_2_1_0_1; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_4_2_2() { return cENDLINEParserRuleCall_4_2_2; }

		//CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_5() { return cCLOSEDCURLYTerminalRuleCall_5; }
	}

	public class ResourceInvolvementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceInvolvement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cResourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cResourceResourceCrossReference_0_0 = (CrossReference)cResourceAssignment_0.eContents().get(0);
		private final RuleCall cResourceResourceIDTerminalRuleCall_0_0_1 = (RuleCall)cResourceResourceCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAtKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOccupationAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOccupationINTTerminalRuleCall_1_1_0 = (RuleCall)cOccupationAssignment_1_1.eContents().get(0);
		private final Keyword cPercentSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cResponsibilityAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cResponsibilityResponsibilityEnumRuleCall_2_1_0 = (RuleCall)cResponsibilityAssignment_2_1.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ResourceInvolvement:
		//
		//	resource=[res::Resource] ("at" occupation=INT "%")? ("as" responsibility=Responsibility)? ENDLINE;
		public ParserRule getRule() { return rule; }

		//resource=[res::Resource] ("at" occupation=INT "%")? ("as" responsibility=Responsibility)? ENDLINE
		public Group getGroup() { return cGroup; }

		//resource=[res::Resource]
		public Assignment getResourceAssignment_0() { return cResourceAssignment_0; }

		//[res::Resource]
		public CrossReference getResourceResourceCrossReference_0_0() { return cResourceResourceCrossReference_0_0; }

		//ID
		public RuleCall getResourceResourceIDTerminalRuleCall_0_0_1() { return cResourceResourceIDTerminalRuleCall_0_0_1; }

		//("at" occupation=INT "%")?
		public Group getGroup_1() { return cGroup_1; }

		//"at"
		public Keyword getAtKeyword_1_0() { return cAtKeyword_1_0; }

		//occupation=INT
		public Assignment getOccupationAssignment_1_1() { return cOccupationAssignment_1_1; }

		//INT
		public RuleCall getOccupationINTTerminalRuleCall_1_1_0() { return cOccupationINTTerminalRuleCall_1_1_0; }

		//"%"
		public Keyword getPercentSignKeyword_1_2() { return cPercentSignKeyword_1_2; }

		//("as" responsibility=Responsibility)?
		public Group getGroup_2() { return cGroup_2; }

		//"as"
		public Keyword getAsKeyword_2_0() { return cAsKeyword_2_0; }

		//responsibility=Responsibility
		public Assignment getResponsibilityAssignment_2_1() { return cResponsibilityAssignment_2_1; }

		//Responsibility
		public RuleCall getResponsibilityResponsibilityEnumRuleCall_2_1_0() { return cResponsibilityResponsibilityEnumRuleCall_2_1_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_3() { return cENDLINEParserRuleCall_3; }
	}

	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionML_COMMENTTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cActivityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInvolvesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cOPENCURLYTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cInvolvedResourcesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInvolvedResourcesResourceInvolvementParserRuleCall_4_2_0 = (RuleCall)cInvolvedResourcesAssignment_4_2.eContents().get(0);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cUnorderedGroup_5.eContents().get(0);
		private final Group cGroup_5_0_0 = (Group)cAlternatives_5_0.eContents().get(0);
		private final Keyword cStartsKeyword_5_0_0_0 = (Keyword)cGroup_5_0_0.eContents().get(0);
		private final Assignment cStartAssignment_5_0_0_1 = (Assignment)cGroup_5_0_0.eContents().get(1);
		private final RuleCall cStartSTRINGTerminalRuleCall_5_0_0_1_0 = (RuleCall)cStartAssignment_5_0_0_1.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_5_0_0_2 = (RuleCall)cGroup_5_0_0.eContents().get(2);
		private final Group cGroup_5_0_1 = (Group)cAlternatives_5_0.eContents().get(1);
		private final Keyword cAfterKeyword_5_0_1_0 = (Keyword)cGroup_5_0_1.eContents().get(0);
		private final Assignment cAfterAssignment_5_0_1_1 = (Assignment)cGroup_5_0_1.eContents().get(1);
		private final CrossReference cAfterActivityElementCrossReference_5_0_1_1_0 = (CrossReference)cAfterAssignment_5_0_1_1.eContents().get(0);
		private final RuleCall cAfterActivityElementQualifiedNameParserRuleCall_5_0_1_1_0_1 = (RuleCall)cAfterActivityElementCrossReference_5_0_1_1_0.eContents().get(1);
		private final Keyword cOffsetKeyword_5_0_1_2 = (Keyword)cGroup_5_0_1.eContents().get(2);
		private final Assignment cOffsetAssignment_5_0_1_3 = (Assignment)cGroup_5_0_1.eContents().get(3);
		private final RuleCall cOffsetINTTerminalRuleCall_5_0_1_3_0 = (RuleCall)cOffsetAssignment_5_0_1_3.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_5_0_1_4 = (RuleCall)cGroup_5_0_1.eContents().get(4);
		private final Group cGroup_5_1 = (Group)cUnorderedGroup_5.eContents().get(1);
		private final Alternatives cAlternatives_5_1_0 = (Alternatives)cGroup_5_1.eContents().get(0);
		private final Group cGroup_5_1_0_0 = (Group)cAlternatives_5_1_0.eContents().get(0);
		private final Keyword cEndsKeyword_5_1_0_0_0 = (Keyword)cGroup_5_1_0_0.eContents().get(0);
		private final Assignment cEndAssignment_5_1_0_0_1 = (Assignment)cGroup_5_1_0_0.eContents().get(1);
		private final RuleCall cEndSTRINGTerminalRuleCall_5_1_0_0_1_0 = (RuleCall)cEndAssignment_5_1_0_0_1.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_5_1_0_0_2 = (RuleCall)cGroup_5_1_0_0.eContents().get(2);
		private final Group cGroup_5_1_0_1 = (Group)cAlternatives_5_1_0.eContents().get(1);
		private final Keyword cDurationKeyword_5_1_0_1_0 = (Keyword)cGroup_5_1_0_1.eContents().get(0);
		private final Assignment cDurationAssignment_5_1_0_1_1 = (Assignment)cGroup_5_1_0_1.eContents().get(1);
		private final RuleCall cDurationINTTerminalRuleCall_5_1_0_1_1_0 = (RuleCall)cDurationAssignment_5_1_0_1_1.eContents().get(0);
		private final RuleCall cENDLINEParserRuleCall_5_1_0_1_2 = (RuleCall)cGroup_5_1_0_1.eContents().get(2);
		private final Keyword cCompletenessKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cCompletenessAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cCompletenessINTTerminalRuleCall_5_1_2_0 = (RuleCall)cCompletenessAssignment_5_1_2.eContents().get(0);
		private final Keyword cPercentSignKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final RuleCall cENDLINEParserRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		private final Group cGroup_5_2 = (Group)cUnorderedGroup_5.eContents().get(2);
		private final Keyword cDependsOnKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cDependenciesAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cDependenciesActivityElementCrossReference_5_2_1_0 = (CrossReference)cDependenciesAssignment_5_2_1.eContents().get(0);
		private final RuleCall cDependenciesActivityElementQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cDependenciesActivityElementCrossReference_5_2_1_0.eContents().get(1);
		private final RuleCall cENDLINEParserRuleCall_5_2_2 = (RuleCall)cGroup_5_2.eContents().get(2);
		private final RuleCall cCLOSEDCURLYTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Activity:
		//
		//	description=ML_COMMENT? "Activity" name=ID OPENCURLY ("involves" OPENCURLY involvedResources+=ResourceInvolvement*
		//
		//	CLOSEDCURLY)? (("starts" start=STRING ENDLINE | "after" after=[ActivityElement|QualifiedName] "offset" offset=INT
		//
		//	ENDLINE) & ("ends" end=STRING ENDLINE | "duration" duration=INT ENDLINE) "completeness" completeness=INT "%" ENDLINE
		//
		//	& ("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?) CLOSEDCURLY;
		public ParserRule getRule() { return rule; }

		//description=ML_COMMENT? "Activity" name=ID OPENCURLY ("involves" OPENCURLY involvedResources+=ResourceInvolvement*
		//
		//CLOSEDCURLY)? (("starts" start=STRING ENDLINE | "after" after=[ActivityElement|QualifiedName] "offset" offset=INT
		//
		//ENDLINE) & ("ends" end=STRING ENDLINE | "duration" duration=INT ENDLINE) "completeness" completeness=INT "%" ENDLINE &
		//
		//("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?) CLOSEDCURLY
		public Group getGroup() { return cGroup; }

		//description=ML_COMMENT?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//ML_COMMENT
		public RuleCall getDescriptionML_COMMENTTerminalRuleCall_0_0() { return cDescriptionML_COMMENTTerminalRuleCall_0_0; }

		//"Activity"
		public Keyword getActivityKeyword_1() { return cActivityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_3() { return cOPENCURLYTerminalRuleCall_3; }

		//("involves" OPENCURLY involvedResources+=ResourceInvolvement* CLOSEDCURLY)?
		public Group getGroup_4() { return cGroup_4; }

		//"involves"
		public Keyword getInvolvesKeyword_4_0() { return cInvolvesKeyword_4_0; }

		//OPENCURLY
		public RuleCall getOPENCURLYTerminalRuleCall_4_1() { return cOPENCURLYTerminalRuleCall_4_1; }

		//involvedResources+=ResourceInvolvement*
		public Assignment getInvolvedResourcesAssignment_4_2() { return cInvolvedResourcesAssignment_4_2; }

		//ResourceInvolvement
		public RuleCall getInvolvedResourcesResourceInvolvementParserRuleCall_4_2_0() { return cInvolvedResourcesResourceInvolvementParserRuleCall_4_2_0; }

		//CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_4_3() { return cCLOSEDCURLYTerminalRuleCall_4_3; }

		//("starts" start=STRING ENDLINE | "after" after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE) & ("ends"
		//
		//end=STRING ENDLINE | "duration" duration=INT ENDLINE) "completeness" completeness=INT "%" ENDLINE & ("dependsOn"
		//
		//dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }

		//"starts" start=STRING ENDLINE | "after" after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }

		//"starts" start=STRING ENDLINE
		public Group getGroup_5_0_0() { return cGroup_5_0_0; }

		//"starts"
		public Keyword getStartsKeyword_5_0_0_0() { return cStartsKeyword_5_0_0_0; }

		//start=STRING
		public Assignment getStartAssignment_5_0_0_1() { return cStartAssignment_5_0_0_1; }

		//STRING
		public RuleCall getStartSTRINGTerminalRuleCall_5_0_0_1_0() { return cStartSTRINGTerminalRuleCall_5_0_0_1_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_5_0_0_2() { return cENDLINEParserRuleCall_5_0_0_2; }

		//"after" after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE
		public Group getGroup_5_0_1() { return cGroup_5_0_1; }

		//"after"
		public Keyword getAfterKeyword_5_0_1_0() { return cAfterKeyword_5_0_1_0; }

		//after=[ActivityElement|QualifiedName]
		public Assignment getAfterAssignment_5_0_1_1() { return cAfterAssignment_5_0_1_1; }

		//[ActivityElement|QualifiedName]
		public CrossReference getAfterActivityElementCrossReference_5_0_1_1_0() { return cAfterActivityElementCrossReference_5_0_1_1_0; }

		//QualifiedName
		public RuleCall getAfterActivityElementQualifiedNameParserRuleCall_5_0_1_1_0_1() { return cAfterActivityElementQualifiedNameParserRuleCall_5_0_1_1_0_1; }

		//"offset"
		public Keyword getOffsetKeyword_5_0_1_2() { return cOffsetKeyword_5_0_1_2; }

		//offset=INT
		public Assignment getOffsetAssignment_5_0_1_3() { return cOffsetAssignment_5_0_1_3; }

		//INT
		public RuleCall getOffsetINTTerminalRuleCall_5_0_1_3_0() { return cOffsetINTTerminalRuleCall_5_0_1_3_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_5_0_1_4() { return cENDLINEParserRuleCall_5_0_1_4; }

		//("ends" end=STRING ENDLINE | "duration" duration=INT ENDLINE) "completeness" completeness=INT "%" ENDLINE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//"ends" end=STRING ENDLINE | "duration" duration=INT ENDLINE
		public Alternatives getAlternatives_5_1_0() { return cAlternatives_5_1_0; }

		//"ends" end=STRING ENDLINE
		public Group getGroup_5_1_0_0() { return cGroup_5_1_0_0; }

		//"ends"
		public Keyword getEndsKeyword_5_1_0_0_0() { return cEndsKeyword_5_1_0_0_0; }

		//end=STRING
		public Assignment getEndAssignment_5_1_0_0_1() { return cEndAssignment_5_1_0_0_1; }

		//STRING
		public RuleCall getEndSTRINGTerminalRuleCall_5_1_0_0_1_0() { return cEndSTRINGTerminalRuleCall_5_1_0_0_1_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_5_1_0_0_2() { return cENDLINEParserRuleCall_5_1_0_0_2; }

		//"duration" duration=INT ENDLINE
		public Group getGroup_5_1_0_1() { return cGroup_5_1_0_1; }

		//"duration"
		public Keyword getDurationKeyword_5_1_0_1_0() { return cDurationKeyword_5_1_0_1_0; }

		//duration=INT
		public Assignment getDurationAssignment_5_1_0_1_1() { return cDurationAssignment_5_1_0_1_1; }

		//INT
		public RuleCall getDurationINTTerminalRuleCall_5_1_0_1_1_0() { return cDurationINTTerminalRuleCall_5_1_0_1_1_0; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_5_1_0_1_2() { return cENDLINEParserRuleCall_5_1_0_1_2; }

		//"completeness"
		public Keyword getCompletenessKeyword_5_1_1() { return cCompletenessKeyword_5_1_1; }

		//completeness=INT
		public Assignment getCompletenessAssignment_5_1_2() { return cCompletenessAssignment_5_1_2; }

		//INT
		public RuleCall getCompletenessINTTerminalRuleCall_5_1_2_0() { return cCompletenessINTTerminalRuleCall_5_1_2_0; }

		//"%"
		public Keyword getPercentSignKeyword_5_1_3() { return cPercentSignKeyword_5_1_3; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_5_1_4() { return cENDLINEParserRuleCall_5_1_4; }

		//("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?
		public Group getGroup_5_2() { return cGroup_5_2; }

		//"dependsOn"
		public Keyword getDependsOnKeyword_5_2_0() { return cDependsOnKeyword_5_2_0; }

		//dependencies+=[ActivityElement|QualifiedName]*
		public Assignment getDependenciesAssignment_5_2_1() { return cDependenciesAssignment_5_2_1; }

		//[ActivityElement|QualifiedName]
		public CrossReference getDependenciesActivityElementCrossReference_5_2_1_0() { return cDependenciesActivityElementCrossReference_5_2_1_0; }

		//QualifiedName
		public RuleCall getDependenciesActivityElementQualifiedNameParserRuleCall_5_2_1_0_1() { return cDependenciesActivityElementQualifiedNameParserRuleCall_5_2_1_0_1; }

		//ENDLINE
		public RuleCall getENDLINEParserRuleCall_5_2_2() { return cENDLINEParserRuleCall_5_2_2; }

		//CLOSEDCURLY
		public RuleCall getCLOSEDCURLYTerminalRuleCall_6() { return cCLOSEDCURLYTerminalRuleCall_6; }
	}

	public class DateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cSolidusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Date:
		//
		//	INT "/" INT "/" INT;
		public ParserRule getRule() { return rule; }

		//INT "/" INT "/" INT
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"/"
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }

		//"/"
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }

		//INT
		public RuleCall getINTTerminalRuleCall_4() { return cINTTerminalRuleCall_4; }
	}
	
	
	public class ResponsibilityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Responsibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRESPONSIBLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRESPONSIBLERESPONSIBLEKeyword_0_0 = (Keyword)cRESPONSIBLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cACCOUNTABLEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cACCOUNTABLEACCOUNTABLEKeyword_1_0 = (Keyword)cACCOUNTABLEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCONSULTEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCONSULTEDCONSULTEDKeyword_2_0 = (Keyword)cCONSULTEDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINFORMEDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINFORMEDINFORMEDKeyword_3_0 = (Keyword)cINFORMEDEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Responsibility:
		//
		//	RESPONSIBLE | ACCOUNTABLE | CONSULTED | INFORMED;
		public EnumRule getRule() { return rule; }

		//RESPONSIBLE | ACCOUNTABLE | CONSULTED | INFORMED
		public Alternatives getAlternatives() { return cAlternatives; }

		//RESPONSIBLE
		public EnumLiteralDeclaration getRESPONSIBLEEnumLiteralDeclaration_0() { return cRESPONSIBLEEnumLiteralDeclaration_0; }

		//"RESPONSIBLE"
		public Keyword getRESPONSIBLERESPONSIBLEKeyword_0_0() { return cRESPONSIBLERESPONSIBLEKeyword_0_0; }

		//ACCOUNTABLE
		public EnumLiteralDeclaration getACCOUNTABLEEnumLiteralDeclaration_1() { return cACCOUNTABLEEnumLiteralDeclaration_1; }

		//"ACCOUNTABLE"
		public Keyword getACCOUNTABLEACCOUNTABLEKeyword_1_0() { return cACCOUNTABLEACCOUNTABLEKeyword_1_0; }

		//CONSULTED
		public EnumLiteralDeclaration getCONSULTEDEnumLiteralDeclaration_2() { return cCONSULTEDEnumLiteralDeclaration_2; }

		//"CONSULTED"
		public Keyword getCONSULTEDCONSULTEDKeyword_2_0() { return cCONSULTEDCONSULTEDKeyword_2_0; }

		//INFORMED
		public EnumLiteralDeclaration getINFORMEDEnumLiteralDeclaration_3() { return cINFORMEDEnumLiteralDeclaration_3; }

		//"INFORMED"
		public Keyword getINFORMEDINFORMEDKeyword_3_0() { return cINFORMEDINFORMEDKeyword_3_0; }
	}
	
	private ProgramElements pProgram;
	private ProjectElements pProject;
	private AssumptionElements pAssumption;
	private ConstraintElements pConstraint;
	private ActivityGroupElements pActivityGroup;
	private WBSImportElements pWBSImport;
	private ResourcesImportElements pResourcesImport;
	private PlanImportElements pPlanImport;
	private QualifiedNameElements pQualifiedName;
	private QualifiedNameWithWildCardElements pQualifiedNameWithWildCard;
	private ActivityElementElements pActivityElement;
	private ENDLINEElements pENDLINE;
	private CheckPointElements pCheckPoint;
	private ResourceInvolvementElements pResourceInvolvement;
	private ActivityElements pActivity;
	private DateElements pDate;
	private TerminalRule tOPENCURLY;
	private TerminalRule tCLOSEDCURLY;
	private ResponsibilityElements unknownRuleResponsibility;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public PlanGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.lowcoupling.mdpm.lng.plan.Plan".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Program:
	//
	//	description=ML_COMMENT? ("Program" name=ID OPENCURLY (plans+=PlanImport ENDLINE)* ("project"
	//
	//	referencedProjects+=[Project|QualifiedName] ENDLINE)* projects+=Project* CLOSEDCURLY) | projects+=Project;
	public ProgramElements getProgramAccess() {
		return (pProgram != null) ? pProgram : (pProgram = new ProgramElements());
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}

	//Project:
	//
	//	description=ML_COMMENT? "Project" name=ID OPENCURLY (wbs=WBSImport ENDLINE)? (resources=ResourcesImport ENDLINE)?
	//
	//	(plans+=PlanImport ENDLINE)* ("assumptions" OPENCURLY assumptions+=Assumption* CLOSEDCURLY)? ("constraints" OPENCURLY
	//
	//	constraints+=Constraint* CLOSEDCURLY)? activities+=ActivityElement* CLOSEDCURLY;
	public ProjectElements getProjectAccess() {
		return (pProject != null) ? pProject : (pProject = new ProjectElements());
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}

	//Assumption:
	//
	//	"-" value=STRING ENDLINE;
	public AssumptionElements getAssumptionAccess() {
		return (pAssumption != null) ? pAssumption : (pAssumption = new AssumptionElements());
	}
	
	public ParserRule getAssumptionRule() {
		return getAssumptionAccess().getRule();
	}

	//Constraint:
	//
	//	"-" value=STRING ENDLINE;
	public ConstraintElements getConstraintAccess() {
		return (pConstraint != null) ? pConstraint : (pConstraint = new ConstraintElements());
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}

	//ActivityGroup:
	//
	//	description=ML_COMMENT? "Group" name=ID OPENCURLY ("dependsOn" dependencies+=[ActivityElement|QualifiedName]*
	//
	//	ENDLINE)? activities+=ActivityElement* //groups += ActivityGroup*
	// CLOSEDCURLY;
	public ActivityGroupElements getActivityGroupAccess() {
		return (pActivityGroup != null) ? pActivityGroup : (pActivityGroup = new ActivityGroupElements());
	}
	
	public ParserRule getActivityGroupRule() {
		return getActivityGroupAccess().getRule();
	}

	//WBSImport:
	//
	//	"wbs" importURI= // feature must be named importURI
	// STRING;
	public WBSImportElements getWBSImportAccess() {
		return (pWBSImport != null) ? pWBSImport : (pWBSImport = new WBSImportElements());
	}
	
	public ParserRule getWBSImportRule() {
		return getWBSImportAccess().getRule();
	}

	//ResourcesImport:
	//
	//	"resources" importURI= // feature must be named importURI
	// STRING;
	public ResourcesImportElements getResourcesImportAccess() {
		return (pResourcesImport != null) ? pResourcesImport : (pResourcesImport = new ResourcesImportElements());
	}
	
	public ParserRule getResourcesImportRule() {
		return getResourcesImportAccess().getRule();
	}

	//PlanImport:
	//
	//	"plan" importURI= // feature must be named importURI
	// STRING;
	public PlanImportElements getPlanImportAccess() {
		return (pPlanImport != null) ? pPlanImport : (pPlanImport = new PlanImportElements());
	}
	
	public ParserRule getPlanImportRule() {
		return getPlanImportAccess().getRule();
	}

	//QualifiedName:
	//
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildCard:
	//
	//	QualifiedName ".*"?;
	public QualifiedNameWithWildCardElements getQualifiedNameWithWildCardAccess() {
		return (pQualifiedNameWithWildCard != null) ? pQualifiedNameWithWildCard : (pQualifiedNameWithWildCard = new QualifiedNameWithWildCardElements());
	}
	
	public ParserRule getQualifiedNameWithWildCardRule() {
		return getQualifiedNameWithWildCardAccess().getRule();
	}

	//ActivityElement:
	//
	//	Activity | CheckPoint | ActivityGroup;
	public ActivityElementElements getActivityElementAccess() {
		return (pActivityElement != null) ? pActivityElement : (pActivityElement = new ActivityElementElements());
	}
	
	public ParserRule getActivityElementRule() {
		return getActivityElementAccess().getRule();
	}

	//ENDLINE:
	//
	//	";";
	public ENDLINEElements getENDLINEAccess() {
		return (pENDLINE != null) ? pENDLINE : (pENDLINE = new ENDLINEElements());
	}
	
	public ParserRule getENDLINERule() {
		return getENDLINEAccess().getRule();
	}

	//CheckPoint:
	//
	//	description=ML_COMMENT? "CheckPoint" name=ID OPENCURLY (("date" end=STRING ENDLINE | "after"
	//
	//	after=[ActivityElement|QualifiedName] "offset" offset=INT ENDLINE) & "completeness" completeness=INT "%" ENDLINE &
	//
	//	("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?) CLOSEDCURLY;
	public CheckPointElements getCheckPointAccess() {
		return (pCheckPoint != null) ? pCheckPoint : (pCheckPoint = new CheckPointElements());
	}
	
	public ParserRule getCheckPointRule() {
		return getCheckPointAccess().getRule();
	}

	//ResourceInvolvement:
	//
	//	resource=[res::Resource] ("at" occupation=INT "%")? ("as" responsibility=Responsibility)? ENDLINE;
	public ResourceInvolvementElements getResourceInvolvementAccess() {
		return (pResourceInvolvement != null) ? pResourceInvolvement : (pResourceInvolvement = new ResourceInvolvementElements());
	}
	
	public ParserRule getResourceInvolvementRule() {
		return getResourceInvolvementAccess().getRule();
	}

	//Activity:
	//
	//	description=ML_COMMENT? "Activity" name=ID OPENCURLY ("involves" OPENCURLY involvedResources+=ResourceInvolvement*
	//
	//	CLOSEDCURLY)? (("starts" start=STRING ENDLINE | "after" after=[ActivityElement|QualifiedName] "offset" offset=INT
	//
	//	ENDLINE) & ("ends" end=STRING ENDLINE | "duration" duration=INT ENDLINE) "completeness" completeness=INT "%" ENDLINE
	//
	//	& ("dependsOn" dependencies+=[ActivityElement|QualifiedName]* ENDLINE)?) CLOSEDCURLY;
	public ActivityElements getActivityAccess() {
		return (pActivity != null) ? pActivity : (pActivity = new ActivityElements());
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}

	//Date:
	//
	//	INT "/" INT "/" INT;
	public DateElements getDateAccess() {
		return (pDate != null) ? pDate : (pDate = new DateElements());
	}
	
	public ParserRule getDateRule() {
		return getDateAccess().getRule();
	}

	//terminal OPENCURLY:
	//
	//	"{";
	public TerminalRule getOPENCURLYRule() {
		return (tOPENCURLY != null) ? tOPENCURLY : (tOPENCURLY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "OPENCURLY"));
	} 

	//terminal CLOSEDCURLY:
	//
	//	"}";
	public TerminalRule getCLOSEDCURLYRule() {
		return (tCLOSEDCURLY != null) ? tCLOSEDCURLY : (tCLOSEDCURLY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "CLOSEDCURLY"));
	} 

	//enum Responsibility:
	//
	//	RESPONSIBLE | ACCOUNTABLE | CONSULTED | INFORMED;
	public ResponsibilityElements getResponsibilityAccess() {
		return (unknownRuleResponsibility != null) ? unknownRuleResponsibility : (unknownRuleResponsibility = new ResponsibilityElements());
	}
	
	public EnumRule getResponsibilityRule() {
		return getResponsibilityAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
