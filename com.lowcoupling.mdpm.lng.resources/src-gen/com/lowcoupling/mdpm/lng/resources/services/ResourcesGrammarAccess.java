/*
* generated by Xtext
*/
package com.lowcoupling.mdpm.lng.resources.services;

import java.util.List;

import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

import com.google.inject.Inject;
import com.google.inject.Singleton;

@Singleton
public class ResourcesGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ResourcesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Resources");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cResourceGroupsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cResourceGroupsResourceGroupParserRuleCall_0_0 = (RuleCall)cResourceGroupsAssignment_0.eContents().get(0);
		private final Assignment cResourcesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cResourcesResourceParserRuleCall_1_0 = (RuleCall)cResourcesAssignment_1.eContents().get(0);
		
		//Resources:
		//
		//	resourceGroups+=ResourceGroup* resources+=Resource*;
		public ParserRule getRule() { return rule; }

		//resourceGroups+=ResourceGroup* resources+=Resource*
		public Group getGroup() { return cGroup; }

		//resourceGroups+=ResourceGroup*
		public Assignment getResourceGroupsAssignment_0() { return cResourceGroupsAssignment_0; }

		//ResourceGroup
		public RuleCall getResourceGroupsResourceGroupParserRuleCall_0_0() { return cResourceGroupsResourceGroupParserRuleCall_0_0; }

		//resources+=Resource*
		public Assignment getResourcesAssignment_1() { return cResourcesAssignment_1; }

		//Resource
		public RuleCall getResourcesResourceParserRuleCall_1_0() { return cResourcesResourceParserRuleCall_1_0; }
	}

	public class ResourceGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIdIDTerminalRuleCall_4_0 = (RuleCall)cIdAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cCostKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCostAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCostINTTerminalRuleCall_7_0 = (RuleCall)cCostAssignment_7.eContents().get(0);
		private final Assignment cCostLabelAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCostLabelSTRINGTerminalRuleCall_8_0 = (RuleCall)cCostLabelAssignment_8.eContents().get(0);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cTypeKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTypeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cTypeSTRINGTerminalRuleCall_11_0 = (RuleCall)cTypeAssignment_11.eContents().get(0);
		private final Keyword cSemicolonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//ResourceGroup:
		//
		//	"Group" name=ID "{" "id" id=ID ";" "cost" cost=INT costLabel=STRING? ";" "type" type=STRING ";" "}";
		public ParserRule getRule() { return rule; }

		//"Group" name=ID "{" "id" id=ID ";" "cost" cost=INT costLabel=STRING? ";" "type" type=STRING ";" "}"
		public Group getGroup() { return cGroup; }

		//"Group"
		public Keyword getGroupKeyword_0() { return cGroupKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"id"
		public Keyword getIdKeyword_3() { return cIdKeyword_3; }

		//id=ID
		public Assignment getIdAssignment_4() { return cIdAssignment_4; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_4_0() { return cIdIDTerminalRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }

		//"cost"
		public Keyword getCostKeyword_6() { return cCostKeyword_6; }

		//cost=INT
		public Assignment getCostAssignment_7() { return cCostAssignment_7; }

		//INT
		public RuleCall getCostINTTerminalRuleCall_7_0() { return cCostINTTerminalRuleCall_7_0; }

		//costLabel=STRING?
		public Assignment getCostLabelAssignment_8() { return cCostLabelAssignment_8; }

		//STRING
		public RuleCall getCostLabelSTRINGTerminalRuleCall_8_0() { return cCostLabelSTRINGTerminalRuleCall_8_0; }

		//";"
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }

		//"type"
		public Keyword getTypeKeyword_10() { return cTypeKeyword_10; }

		//type=STRING
		public Assignment getTypeAssignment_11() { return cTypeAssignment_11; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_11_0() { return cTypeSTRINGTerminalRuleCall_11_0; }

		//";"
		public Keyword getSemicolonKeyword_12() { return cSemicolonKeyword_12; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Resource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeResourceGroupCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeResourceGroupIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeResourceGroupCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Resource:
		//
		//	"Resource" name=ID "{" "type" type=[ResourceGroup] ";" "}";
		public ParserRule getRule() { return rule; }

		//"Resource" name=ID "{" "type" type=[ResourceGroup] ";" "}"
		public Group getGroup() { return cGroup; }

		//"Resource"
		public Keyword getResourceKeyword_0() { return cResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"type"
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }

		//type=[ResourceGroup]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//[ResourceGroup]
		public CrossReference getTypeResourceGroupCrossReference_4_0() { return cTypeResourceGroupCrossReference_4_0; }

		//ID
		public RuleCall getTypeResourceGroupIDTerminalRuleCall_4_0_1() { return cTypeResourceGroupIDTerminalRuleCall_4_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private ResourcesElements pResources;
	private ResourceGroupElements pResourceGroup;
	private ResourceElements pResource;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ResourcesGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.lowcoupling.mdpm.lng.resources.Resources".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Resources:
	//
	//	resourceGroups+=ResourceGroup* resources+=Resource*;
	public ResourcesElements getResourcesAccess() {
		return (pResources != null) ? pResources : (pResources = new ResourcesElements());
	}
	
	public ParserRule getResourcesRule() {
		return getResourcesAccess().getRule();
	}

	//ResourceGroup:
	//
	//	"Group" name=ID "{" "id" id=ID ";" "cost" cost=INT costLabel=STRING? ";" "type" type=STRING ";" "}";
	public ResourceGroupElements getResourceGroupAccess() {
		return (pResourceGroup != null) ? pResourceGroup : (pResourceGroup = new ResourceGroupElements());
	}
	
	public ParserRule getResourceGroupRule() {
		return getResourceGroupAccess().getRule();
	}

	//Resource:
	//
	//	"Resource" name=ID "{" "type" type=[ResourceGroup] ";" "}";
	public ResourceElements getResourceAccess() {
		return (pResource != null) ? pResource : (pResource = new ResourceElements());
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
